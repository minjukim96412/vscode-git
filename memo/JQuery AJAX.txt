JQuery AJAX
-Load : load()
    • jQuery의 load() 메소드는 간단하지만 강력한 AJAX 메소드입니다.
    • load() 메소드는 서버에서 데이터를 로드하고 반환된 데이터를 선택한 요소에 삽입합니다.
    • 구문:
            $(selector).load(URL,data,callback);
    • 필수 파라미터인 URL은 로드하려는 URL을 지정합니다.
    • 선택적 파라미터인 data는 요청과 함께 전송할 쿼리 문자열 키/값 쌍을 지정합니다.
    • 선택적 파라미터인 callback은 load() 메소드가 완료된 후 실행할 함수의 이름입니다.
    • 여기에 "demo_test.txt" 파일의 내용이 있습니다:
        <div id="result"></div>
    • 다음 예제는 "demo_test.txt" 파일의 특정내용
        $(document).ready(function(){
            $("#result").load("demo_test.txt");
        });
    • URL 파라미터에 jQuery 선택자를 추가할 수도 있습니다.
    • 다음 예제는 "demo_test.txt" 파일 내의 id="p1" 요소의 내용을 특정 요소에 로드합니다:
        $(document).ready(function(){
            $("#result").load("demo_test.txt #p1");
        });
    • 선택적 파라미터인 callback은 load() 메소드가 완료되었을 때 실행할 콜백 함수를 지정합니다.
         콜백 함수는 다음과 같은 다양한 매개변수를 가질 수 있습니다:
        - responseTxt : 호출이 성공한 경우 결과 콘텐츠를 포함합니다.
        - statusTxt : 호출의 상태를 포함합니다.
        - xhr : XMLHttpRequest 객체를 포함합니다.
    • 다음 예제는 load() 메소드가 완료된 후 알림 상자를 표시합니다. 
        oad() 메소드가 성공하면 "외부 콘텐츠가 성공적으로 로드되었습니다!"를 표시하고,
        실패하면 오류 메시지를 표시합니다:

        $(document).ready(function(){
            $("#result").load("demo_test.txt", function(responseTxt, statusTxt, xhr){
                if(statusTxt == "success"){
                alert("외부 콘텐츠가 성공적으로 로드되었습니다!");
                } else if(statusTxt == "error"){
                alert("콘텐츠를 로드하는 데 실패했습니다: " + xhr.status + " " + xhr.statusText);
                }
             });
        });

-Get/Post : $.get()
    • $.get() 메소드는 HTTP GET 요청으로 서버에서 데이터를 요청합니다.
    • 필수 파라미터인 URL은 요청하려는 URL을 지정합니다.
    • 선택적 파라미터인 callback은 요청이 성공한 경우 실행할 함수의 이름입니다.
    • 다음은 서버의 파일에서 데이터를 검색하기 위해 $.get() 메소드를 사용하는 예제입니다:
        $(document).ready(function(){
            $.get("demo_test.txt", function(data){
                alert("서버에서 가져온 데이터: " + data);
            });
        });
    • $.get()의 첫 번째 매개변수는 요청하려는 URL("demo_test.asp")입니다.
    • 두 번째 매개변수는 콜백 함수입니다. 첫 번째 콜백 매개변수는 요청된 페이지의 내용을 담고 있고, 두 번째 콜백 매개변수는 요청의 상태를 담고 있습니다.
    • 팁 : 여기 ASP 파일의 모습은 다음과 같습니다 ("demo_test.asp"):
        $(document).ready(function(){
            $.get("demo_test.asp", function(data, status){
                alert("서버에서 가져온 데이터: " + data + "\n상태: " + status);
            });
        });

-Get/Post : $.post() 
    • $.post() 메소드는 HTTP POST 요청을 사용하여 서버에서 데이터를 요청합니다.
    • 구문:
        $.post(URL,data,callback);
    • 필수 파라미터인 URL은 요청하려는 URL을 지정합니다.
    • 선택적 파라미터인 data는 요청과 함께 전송할 데이터를 지정합니다.
    • 선택적 파라미터인 callback은 요청이 성공한 경우 실행할 함수의 이름입니다.
    • 다음은 요청과 함께 데이터를 전송하기 위해 $.post() 메소드를 사용하는 예제입니다:
        <form id="myForm">
            이름: <input type="text" id="name"><br>
            이메일: <input type="text" id="email"><br>
            <input type="submit" value="전송">
        </form>

        $(document).ready(function(){
            $("#myForm").submit(function(event){
                event.preventDefault();
                
                var name = $("#name").val();
                var email = $("#email").val();
                
                $.post("process.php", {name: name, email: email}, function(data, status){
                alert("서버에서 받은 응답: " + data + "\n상태: " + status);
                });
            });
        });

        $.post() 메소드를 사용하여 폼의 입력값을 서버의 "process.php" 파일에 전송합니다.
        data 매개변수에는 name과 email 값을 객체 형태로 전달합니다. 
        서버에서 받은 응답과 요청의 상태는 콜백 함수에 전달되며, 알림 상자를 사용하여 표시됩니다.