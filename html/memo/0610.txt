JSON- Java Script Object Notation
    : 네트워크상에서 데이터 송수신에 사용되는 경량의 데이터 포맷
        JSON은 XML보다 작고, 더 빠르고 쉽게 파싱할 수 있습니다.
        JSON은 경량 텍스트 데이터 교환 형식입니다.
        JSON은 언어에 독립적입니다.
        (JSON은 데이터를 설명하기 위해 JavaScript 구문을 사용하지만, 
            JSON 자체는 언어와 플랫폼에 독립적입니다. 
            다양한 프로그래밍 언어에서 JSON 파서와 JSON 라이브러리가 존재합니다.)
        JSON은 "자체 설명적"이며 이해하기 쉽습니다.
    
JSON(JavaScript Object Notation)은 경량 데이터 교환 형식입니다. 
사람이 읽고 쓰기 쉽고, 기계가 파싱하고 생성하기 쉽습니다. 
이것은 1999년 12월에 발표된 표준 ECMA-262 3판의 JavaScript 프로그래밍 언어의 하위 집합을 기반으로 합니다. 
JSON은 완전히 언어 독립적인 텍스트 형식이지만, 
    C, C++, C#, Java, JavaScript, Perl, Python 등 C 계열 언어의 프로그래머에게 익숙한 관습을 사용합니다.
이러한 특성으로 인해 JSON은 이상적인 데이터 교환 언어가 됩니다.

JSON은 두 가지 구조로 구성됩니다:
1.이름/값 쌍의 컬렉션. 
    다양한 언어에서는 객체, 레코드, 구조체, 사전, 해시 테이블, 키 리스트 또는 연관 배열로 실현됩니다.
2.값의 순서 있는 목록. 
    대부분의 언어에서는 배열, 벡터, 리스트 또는 시퀀스로 실현됩니다.

JSON 텍스트 형식은 JavaScript 객체를 생성하는 코드와 구문적으로 동일합니다.
    이러한 유사성 때문에, 파서를 사용하는 대신, 
    JavaScript 프로그램은 내장된 eval() 함수를 사용하여 JSON 데이터를 실행하고 
    네이티브 JavaScript 객체를 생성할 수 있습니다.

XML과 공통점
    - 일반 텍스트입니다.
    - "자체 설명적"(사람이 읽을 수 있음)입니다.
    - 계층적입니다(값 안에 값이 있음).
    - JavaScript로 파싱될 수 있습니다.
    - 데이터는 AJAX를 사용하여 전송될 수 있습니다.

XML과 차이점
    - 종료 태그가 없습니다.
    - 더 짧습니다.
    - 읽고 쓰는 속도가 더 빠릅니다.
    - 내장된 JavaScript `eval()`을 사용하여 파싱할 수 있습니다.
    - 배열을 사용합니다.
    - 예약어가 없습니다.

- AJAX 애플리케이션에서는 JSON이 XML보다 더 빠르고 쉽습니다:
    - XML을 사용할 때
        - XML 문서를 가져옵니다
        - XML DOM을 사용하여 문서를 반복 처리합니다
        - 값을 추출하여 변수에 저장합니다

    - JSON을 사용할 때
        - JSON 문자열을 가져옵니다
        - JSON 문자열을 `eval()`합니다

- JSON 구문은 JavaScript 객체 표기법 구문의 하위 집합입니다:
  - 데이터는 이름/값 쌍으로 이루어져 있습니다.
  - 데이터는 쉼표로 구분됩니다.
  - 중괄호는 객체를 감쌉니다.
  - 대괄호는 배열을 감쌉니다.

- JSON 데이터는 이름/값 쌍으로 작성됩니다.
- 이름/값 쌍은 필드 이름(큰따옴표로 묶음), 콜론, 그 뒤에 오는 값으로 구성됩니다:
    "firstName" : "John"
- 이해하기 쉽고, JavaScript 문장과 같습니다:
    firstName = "John"

- JSON 객체는 중괄호 안에 작성됩니다.
- 객체는 여러 이름/값 쌍을 포함할 수 있습니다:
   { "firstName" : "John", "lastName" : "Doe" }
- 이해하기 쉽고, JavaScript 문장과 같습니다:
     firstName = "John"
     lastName = "Doe"

- JSON 파일의 파일 형식은 ".json"입니다.
- JSON 텍스트의 MIME 타입은 "application/json"입니다.

- JSON 배열은 대괄호 안에 작성됩니다.
- 배열은 여러 객체를 포함할 수 있습니다:
    {
    "employees" : [
        { "firstName" : "John", "lastName" : "Doe" }
        { "firstName" : "Anna", "lastName" : "Smith" }
        { "firstName" : "Peter", "lastName" : "Jones" }
    ]
    }
  위의 예제에서 "employees" 객체는 세 개의 객체를 포함하는 배열입니다. 
    각 객체는 이름과 성을 가진 사람의 레코드입니다.

https://www.json.org/json-ko.html 참고